// <auto-generated />
using System;
using GondorsLegacy.Services.HotelInformation.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GondorsLegacy.Services.HotelInformation.Migrations.HotelInformationDb
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20240113103201_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GondorsLegacy.Services.HotelInformation.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTimeOffset>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Hotels", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fb456969-5392-4e25-abca-06d89a284aa7"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(930), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Salvator Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(932), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("fc72ceb6-6482-4245-9358-ab215fb3e816"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(935), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Kelebek Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(935), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("e29fcaa9-406c-49b2-b375-8166963f32a8"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(937), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Vensure Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(938), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("599bc6bd-68a7-43e6-bb91-ba39d15df78e"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(940), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Radisson Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(940), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("c65715c0-8f50-457e-b274-1e908b669a14"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(942), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Koeralop Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2024, 1, 13, 10, 32, 1, 252, DateTimeKind.Unspecified).AddTicks(942), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
