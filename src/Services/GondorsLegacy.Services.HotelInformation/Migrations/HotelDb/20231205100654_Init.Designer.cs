// <auto-generated />
using System;
using GondorsLegacy.Services.HotelInformation.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GondorsLegacy.Services.HotelInformation.Migrations.HotelDb
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20231205100654_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GondorsLegacy.Services.HotelInformation.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTimeOffset>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Hotels", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf39541a-6cc3-4d9a-bc65-5078dcc41b90"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(7990), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Salvator Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(7991), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("1a1bc651-7cde-43f7-800f-d4245ae5e0f7"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(7994), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Kelebek Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(7994), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("c458637b-11e5-41cb-ad62-1515a42b4cac"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(7996), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Vensure Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(7996), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("1eab298e-7cc9-4242-ac64-9f64bee2d4e0"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(7998), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Radisson Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(7998), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("34822875-0df8-4b5a-bf1c-9647c3e70266"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(7999), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s,",
                            Name = "Koeralop Hotel",
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2023, 12, 5, 10, 6, 54, 778, DateTimeKind.Unspecified).AddTicks(8000), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
