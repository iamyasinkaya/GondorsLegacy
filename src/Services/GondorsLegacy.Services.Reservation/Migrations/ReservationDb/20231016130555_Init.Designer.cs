// <auto-generated />
using System;
using GondorsLegacy.Services.Reservation.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GondorsLegacy.Services.Reservation.Migrations.ReservationDb
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20231016130555_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GondorsLegacy.Services.Reservation.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CancellationReason")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("ExtraServicePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<string>("PaymentInformation")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SpecialRequests")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Reservations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("eeb48cda-4a54-4f4e-be79-9bc0897d51c2"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 16, 16, 5, 55, 399, DateTimeKind.Local).AddTicks(2520),
                            CheckOutDate = new DateTime(2023, 10, 24, 16, 5, 55, 399, DateTimeKind.Local).AddTicks(2550),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "yasin.salvator@gmail.com",
                            CustomerName = "Yasin Çınar SALVATOR",
                            ExtraServicePrice = 0.00m,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentInformation = "Ödendi",
                            PaymentStatus = 0,
                            ReservationId = 1,
                            ReservationStatus = 0,
                            RoomNumber = 501,
                            RoomType = 1,
                            SpecialRequests = "Internet mutlaka olmalıdır!",
                            TaxRate = 20.00m,
                            TotalPrice = 17500.12m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("b836a1bc-7e88-40c6-abcf-7def69ee9b85"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 17, 16, 5, 55, 399, DateTimeKind.Local).AddTicks(2570),
                            CheckOutDate = new DateTime(2023, 10, 20, 16, 5, 55, 399, DateTimeKind.Local).AddTicks(2570),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "ahmet.cakar@gmail.com",
                            CustomerName = "Ahmet ASLAN ÇAKAR",
                            ExtraServicePrice = 0.00m,
                            NumberOfAdults = 2,
                            NumberOfChildren = 1,
                            NumberOfGuests = 3,
                            PaymentInformation = "Bekliyor",
                            PaymentStatus = 1,
                            ReservationId = 2,
                            ReservationStatus = 1,
                            RoomNumber = 502,
                            RoomType = 2,
                            SpecialRequests = "Çocuğum için klozete basamak koyulabilir mi?",
                            TaxRate = 20.00m,
                            TotalPrice = 21500.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("8df0f252-47bb-4d07-b373-ce61b91176bc"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 28, 16, 5, 55, 399, DateTimeKind.Local).AddTicks(2580),
                            CheckOutDate = new DateTime(2023, 11, 2, 16, 5, 55, 399, DateTimeKind.Local).AddTicks(2580),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "ahmet.cakar@gmail.com",
                            CustomerName = "Sibel SAĞLAM",
                            ExtraServicePrice = 0.00m,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            NumberOfGuests = 1,
                            PaymentInformation = "Ödendi",
                            PaymentStatus = 0,
                            ReservationId = 3,
                            ReservationStatus = 0,
                            RoomNumber = 503,
                            RoomType = 0,
                            SpecialRequests = "Sigara kullanılmayan oda olsun.",
                            TaxRate = 20.00m,
                            TotalPrice = 1500.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
