// <auto-generated />
using System;
using GondorsLegacy.Services.Reservation.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GondorsLegacy.Services.Reservation.Migrations.ReservationDb
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20231020220403_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GondorsLegacy.Services.Reservation.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CancellationReason")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReservationCancelled")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SpecialRequests")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Reservations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6b5db74c-1da3-4b06-8e62-1ffcf4731c43"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 21, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(40),
                            CheckOutDate = new DateTime(2023, 10, 29, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(70),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "yasin.salvator@gmail.com",
                            CustomerFirstName = "Yasin Çınar",
                            CustomerId = new Guid("505e5ce5-714c-433c-b095-ed3b0770ac84"),
                            CustomerLastName = "SALVATOR",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 501,
                            RoomType = 1,
                            SpecialRequests = "Internet mutlaka olmalıdır!",
                            TotalPrice = 17500.12m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("bbd6f51b-01d8-4c02-8431-cf94d7b10224"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 22, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(100),
                            CheckOutDate = new DateTime(2023, 10, 25, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(100),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "ahmet.cakar@gmail.com",
                            CustomerFirstName = "Ahmet ASLAN ",
                            CustomerId = new Guid("a0f75614-47d7-4d01-958d-9b948fd32dc3"),
                            CustomerLastName = "ÇAKAR",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 1,
                            NumberOfGuests = 3,
                            PaymentStatus = 1,
                            ReservationStatus = 1,
                            RoomNumber = 502,
                            RoomType = 2,
                            SpecialRequests = "Çocuğum için klozete basamak koyulabilir mi?",
                            TotalPrice = 21500.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("43ad979e-3e28-497d-b51f-bb2d62fe297a"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 11, 2, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(110),
                            CheckOutDate = new DateTime(2023, 11, 7, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(110),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "ahmet.cakar@gmail.com",
                            CustomerFirstName = "Sibel",
                            CustomerId = new Guid("34d59ff0-051b-484f-8f09-888d1736d7b6"),
                            CustomerLastName = "SAĞLAM",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            NumberOfGuests = 1,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 503,
                            RoomType = 0,
                            SpecialRequests = "Sigara kullanılmayan oda olsun.",
                            TotalPrice = 1500.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("db416e7f-1c14-41eb-9606-2af6459ed98b"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 22, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(110),
                            CheckOutDate = new DateTime(2023, 10, 24, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(120),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "john.doe@example.com",
                            CustomerFirstName = "John Doe",
                            CustomerId = new Guid("415eef8d-a3f8-4567-8e4f-8606d4ecf4f1"),
                            CustomerLastName = "Doe",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            NumberOfGuests = 1,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 101,
                            RoomType = 0,
                            SpecialRequests = "Need a quiet room.",
                            TotalPrice = 8000.50m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("13176391-361d-436e-abe0-e98b8c82a234"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 22, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(120),
                            CheckOutDate = new DateTime(2023, 10, 28, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(120),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "jane.doe@example.com",
                            CustomerFirstName = "Jane Doe",
                            CustomerId = new Guid("386af8ce-563e-4386-9138-e08294ff3aa0"),
                            CustomerLastName = "Doe",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 502,
                            RoomType = 1,
                            SpecialRequests = "Need a room with a view.",
                            TotalPrice = 22000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("24d81139-de0b-4465-b00a-581f744d53d7"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 23, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(130),
                            CheckOutDate = new DateTime(2023, 10, 26, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(130),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "peter.parker@example.com",
                            CustomerFirstName = "Peter Parker",
                            CustomerId = new Guid("e8631740-54f7-444f-ad7a-9975d413c375"),
                            CustomerLastName = "Parker",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            NumberOfGuests = 4,
                            PaymentStatus = 1,
                            ReservationStatus = 1,
                            RoomNumber = 603,
                            RoomType = 2,
                            SpecialRequests = "Need a room with two double beds.",
                            TotalPrice = 35000.75m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("1f9c5401-2840-419f-9860-baf015ab0b9b"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 24, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(190),
                            CheckOutDate = new DateTime(2023, 10, 26, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(200),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "ali.yilmaz@example.com",
                            CustomerFirstName = "Ali Yılmaz",
                            CustomerId = new Guid("3a141e18-e182-43ac-bf18-b8be76d73223"),
                            CustomerLastName = "Yılmaz",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 1,
                            NumberOfGuests = 3,
                            PaymentStatus = 2,
                            ReservationStatus = 2,
                            RoomNumber = 701,
                            RoomType = 2,
                            SpecialRequests = "Need a room with a balcony.",
                            TotalPrice = 45000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("b78ba515-3337-4dc2-a492-68e3918a56d0"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 27, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(200),
                            CheckOutDate = new DateTime(2023, 10, 30, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(200),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "aysegul.aktas@example.com",
                            CustomerFirstName = "Ayşegül Aktaş",
                            CustomerId = new Guid("273bd7b3-8934-4820-abea-0078e22a55ff"),
                            CustomerLastName = "Aktaş",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            NumberOfGuests = 1,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 201,
                            RoomType = 0,
                            SpecialRequests = "Need a room with a wheelchair accessible bathroom.",
                            TotalPrice = 10000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("048838a3-741a-4d32-b171-2d061f5494e2"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 28, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(210),
                            CheckOutDate = new DateTime(2023, 10, 31, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(210),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "mehmet.ozdemir@example.com",
                            CustomerFirstName = "Mehmet Özdemir",
                            CustomerId = new Guid("2ba1e7cb-86c5-4a1a-abb6-9d2ed4a9dd14"),
                            CustomerLastName = "Özdemir",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 402,
                            RoomType = 1,
                            SpecialRequests = "Need a room with a king-sized bed.",
                            TotalPrice = 25000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("8d5dc0b9-5707-4f5a-af25-091813b33817"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 22, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(220),
                            CheckOutDate = new DateTime(2023, 10, 24, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(220),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "john.doe@example.com",
                            CustomerFirstName = "John Doe",
                            CustomerId = new Guid("2e728122-1db5-4a4b-bed0-cafa5fadb3d5"),
                            CustomerLastName = "Doe",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            NumberOfGuests = 1,
                            PaymentStatus = 1,
                            ReservationStatus = 1,
                            RoomNumber = 101,
                            RoomType = 0,
                            SpecialRequests = "Need a quiet room.",
                            TotalPrice = 8000.50m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("636b643c-20ac-4a1a-bc6e-688c88ddbdc4"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 22, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(230),
                            CheckOutDate = new DateTime(2023, 10, 28, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(230),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "jane.doe@example.com",
                            CustomerFirstName = "Jane Doe",
                            CustomerId = new Guid("fc4d0914-e0e3-41bc-bc64-ecbf427878ce"),
                            CustomerLastName = "Doe",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 502,
                            RoomType = 1,
                            SpecialRequests = "Need a room with a view.",
                            TotalPrice = 22000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("67126244-a036-4a56-afe6-56d4631b42cd"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 23, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(240),
                            CheckOutDate = new DateTime(2023, 10, 26, 1, 4, 3, 467, DateTimeKind.Local).AddTicks(240),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "peter.parker@example.com",
                            CustomerFirstName = "Peter Parker",
                            CustomerId = new Guid("3fb599b9-0b28-41ba-84d3-2a12658569c0"),
                            CustomerLastName = "Parker",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsReservationCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            NumberOfGuests = 4,
                            PaymentStatus = 1,
                            ReservationStatus = 1,
                            RoomNumber = 603,
                            RoomType = 2,
                            SpecialRequests = "Need a room with two double beds.",
                            TotalPrice = 35000.75m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
