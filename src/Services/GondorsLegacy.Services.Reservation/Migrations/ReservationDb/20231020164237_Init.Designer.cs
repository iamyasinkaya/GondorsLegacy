// <auto-generated />
using System;
using GondorsLegacy.Services.Reservation.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GondorsLegacy.Services.Reservation.Migrations.ReservationDb
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20231020164237_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GondorsLegacy.Services.Reservation.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CancellationReason")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HotelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SpecialRequests")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Reservations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fcfcb6f0-560a-42e3-83f5-e5dc4aadc6c7"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 20, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5140),
                            CheckOutDate = new DateTime(2023, 10, 28, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5170),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "yasin.salvator@gmail.com",
                            CustomerFirstName = "Yasin Çınar",
                            CustomerId = new Guid("a6c3e8f0-bdbf-411e-ae96-9efa0833af8b"),
                            CustomerLastName = "SALVATOR",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 501,
                            RoomType = 1,
                            SpecialRequests = "Internet mutlaka olmalıdır!",
                            TotalPrice = 17500.12m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("635597d9-f9c7-42ce-a4e8-0bd008e48fd6"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 21, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5180),
                            CheckOutDate = new DateTime(2023, 10, 24, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5190),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "ahmet.cakar@gmail.com",
                            CustomerFirstName = "Ahmet ASLAN ",
                            CustomerId = new Guid("4b37b031-ff82-4cf2-b213-664748c2508c"),
                            CustomerLastName = "ÇAKAR",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 2,
                            NumberOfChildren = 1,
                            NumberOfGuests = 3,
                            PaymentStatus = 1,
                            ReservationStatus = 1,
                            RoomNumber = 502,
                            RoomType = 2,
                            SpecialRequests = "Çocuğum için klozete basamak koyulabilir mi?",
                            TotalPrice = 21500.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("434c491d-a4f8-4df1-b81c-7141a3d4c2af"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 11, 1, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5200),
                            CheckOutDate = new DateTime(2023, 11, 6, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5200),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "ahmet.cakar@gmail.com",
                            CustomerFirstName = "Sibel",
                            CustomerId = new Guid("62d3ca19-e012-4322-8ad7-abba68880aec"),
                            CustomerLastName = "SAĞLAM",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            NumberOfGuests = 1,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 503,
                            RoomType = 0,
                            SpecialRequests = "Sigara kullanılmayan oda olsun.",
                            TotalPrice = 1500.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("63e34dc1-58bf-4eb3-af4d-2d2712f0a0c0"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 21, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5200),
                            CheckOutDate = new DateTime(2023, 10, 23, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5200),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "john.doe@example.com",
                            CustomerFirstName = "John Doe",
                            CustomerId = new Guid("02488b69-9ab2-4a64-ac0c-a48e070ca185"),
                            CustomerLastName = "Doe",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            NumberOfGuests = 1,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 101,
                            RoomType = 0,
                            SpecialRequests = "Need a quiet room.",
                            TotalPrice = 8000.50m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("fc5f77f5-8e32-48d1-b05c-b88671c8db8c"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 21, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5210),
                            CheckOutDate = new DateTime(2023, 10, 27, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5210),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "jane.doe@example.com",
                            CustomerFirstName = "Jane Doe",
                            CustomerId = new Guid("6423f059-7033-4f31-a19a-25d4970b90c7"),
                            CustomerLastName = "Doe",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 502,
                            RoomType = 1,
                            SpecialRequests = "Need a room with a view.",
                            TotalPrice = 22000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("00e8c982-0333-4aa7-ab0a-e558a6fb70c0"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 22, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5220),
                            CheckOutDate = new DateTime(2023, 10, 25, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5220),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "peter.parker@example.com",
                            CustomerFirstName = "Peter Parker",
                            CustomerId = new Guid("467ee961-0f5a-45be-9873-d1e3aa269ab2"),
                            CustomerLastName = "Parker",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            NumberOfGuests = 4,
                            PaymentStatus = 1,
                            ReservationStatus = 1,
                            RoomNumber = 603,
                            RoomType = 2,
                            SpecialRequests = "Need a room with two double beds.",
                            TotalPrice = 35000.75m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("97cabaff-4725-409b-a3f1-c6665e8bd55e"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 23, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5230),
                            CheckOutDate = new DateTime(2023, 10, 25, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5230),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "ali.yilmaz@example.com",
                            CustomerFirstName = "Ali Yılmaz",
                            CustomerId = new Guid("05dda1d6-bd98-48ec-89bb-bc1a034ada86"),
                            CustomerLastName = "Yılmaz",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 2,
                            NumberOfChildren = 1,
                            NumberOfGuests = 3,
                            PaymentStatus = 2,
                            ReservationStatus = 2,
                            RoomNumber = 701,
                            RoomType = 2,
                            SpecialRequests = "Need a room with a balcony.",
                            TotalPrice = 45000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("8e844b9a-0900-47f7-887c-2ef503569cde"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 26, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5240),
                            CheckOutDate = new DateTime(2023, 10, 29, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5240),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "aysegul.aktas@example.com",
                            CustomerFirstName = "Ayşegül Aktaş",
                            CustomerId = new Guid("d1a2a34d-a26d-464c-8d50-c5099659ff74"),
                            CustomerLastName = "Aktaş",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            NumberOfGuests = 1,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 201,
                            RoomType = 0,
                            SpecialRequests = "Need a room with a wheelchair accessible bathroom.",
                            TotalPrice = 10000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("e8ca9cfc-2c88-4056-9926-bf46cff49282"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 27, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5250),
                            CheckOutDate = new DateTime(2023, 10, 30, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5250),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "mehmet.ozdemir@example.com",
                            CustomerFirstName = "Mehmet Özdemir",
                            CustomerId = new Guid("32cd45bf-2195-4a38-b7b3-d8bf2e9391ae"),
                            CustomerLastName = "Özdemir",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 402,
                            RoomType = 1,
                            SpecialRequests = "Need a room with a king-sized bed.",
                            TotalPrice = 25000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("8ae5bed7-c1b6-4de4-9374-d6f26e45dded"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 21, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5260),
                            CheckOutDate = new DateTime(2023, 10, 23, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5260),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "john.doe@example.com",
                            CustomerFirstName = "John Doe",
                            CustomerId = new Guid("1bc8f146-35f2-4ce6-9673-23ad1a58cfb5"),
                            CustomerLastName = "Doe",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            NumberOfGuests = 1,
                            PaymentStatus = 1,
                            ReservationStatus = 1,
                            RoomNumber = 101,
                            RoomType = 0,
                            SpecialRequests = "Need a quiet room.",
                            TotalPrice = 8000.50m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("80e28a38-01e4-4ea5-9be8-82dba50950fe"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 21, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5260),
                            CheckOutDate = new DateTime(2023, 10, 27, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5270),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "jane.doe@example.com",
                            CustomerFirstName = "Jane Doe",
                            CustomerId = new Guid("77f7a42a-b49b-4288-b906-3b66a423237d"),
                            CustomerLastName = "Doe",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 502,
                            RoomType = 1,
                            SpecialRequests = "Need a room with a view.",
                            TotalPrice = 22000.00m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("e2f0ac1b-f22e-4dbd-9a74-45ef15588f7a"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2023, 10, 22, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5270),
                            CheckOutDate = new DateTime(2023, 10, 25, 19, 42, 37, 882, DateTimeKind.Local).AddTicks(5270),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "peter.parker@example.com",
                            CustomerFirstName = "Peter Parker",
                            CustomerId = new Guid("073f2fd4-6ecd-4b6b-8586-cd4198df7f85"),
                            CustomerLastName = "Parker",
                            HotelId = new Guid("00000000-0000-0000-0000-000000000000"),
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            NumberOfGuests = 4,
                            PaymentStatus = 1,
                            ReservationStatus = 1,
                            RoomNumber = 603,
                            RoomType = 2,
                            SpecialRequests = "Need a room with two double beds.",
                            TotalPrice = 35000.75m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
