// <auto-generated />
using System;
using GondorsLegacy.Services.Reservation.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GondorsLegacy.Services.Reservation.Migrations.Reservations
{
    [DbContext(typeof(ReservationDbContext))]
    partial class ReservationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GondorsLegacy.Services.Reservation.Entities.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<DateTimeOffset>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Guests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c951a59-a126-4a8d-b4b9-bf48377b13a0"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2024, 5, 1, 12, 39, 31, 925, DateTimeKind.Unspecified).AddTicks(8168), new TimeSpan(0, 3, 0, 0, 0)),
                            DateOfBirth = new DateTime(1995, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "yasin.kanberoglu@gmail.com",
                            Firstname = "Yasin Mirza",
                            Gender = 0,
                            Lastname = "KANBEROĞLU",
                            PhoneNumber = "05303288200",
                            ReservationId = new Guid("b8a07d3e-ca94-4a51-bc7d-ef1db4a566c6"),
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2024, 5, 1, 12, 39, 31, 925, DateTimeKind.Unspecified).AddTicks(8129), new TimeSpan(0, 3, 0, 0, 0))
                        },
                        new
                        {
                            Id = new Guid("d39aae86-a6c6-40e5-bc69-9e0953e7b6cf"),
                            CreatedDateTime = new DateTimeOffset(new DateTime(2024, 5, 1, 12, 39, 31, 925, DateTimeKind.Unspecified).AddTicks(8178), new TimeSpan(0, 3, 0, 0, 0)),
                            DateOfBirth = new DateTime(1994, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "asli.kanberoglu@gmail.com",
                            Firstname = "Aslı",
                            Gender = 0,
                            Lastname = "KANBEROĞLU",
                            PhoneNumber = "05303288201",
                            ReservationId = new Guid("b8a07d3e-ca94-4a51-bc7d-ef1db4a566c6"),
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2024, 5, 1, 12, 39, 31, 925, DateTimeKind.Unspecified).AddTicks(8177), new TimeSpan(0, 3, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("GondorsLegacy.Services.Reservation.Entities.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CancellationReason")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTimeOffset>("CreatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CustomerFirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReservationCancelled")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<int>("ReservationStatus")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SpecialRequests")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("UpdatedDateTime")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.ToTable("Reservations", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b8a07d3e-ca94-4a51-bc7d-ef1db4a566c6"),
                            CancellationReason = 0,
                            CheckInDate = new DateTime(2024, 5, 1, 12, 39, 31, 926, DateTimeKind.Local).AddTicks(1131),
                            CheckOutDate = new DateTime(2024, 5, 9, 12, 39, 31, 926, DateTimeKind.Local).AddTicks(1133),
                            CreatedDateTime = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            CustomerEmail = "yasin.kanberoglu@gmail.com",
                            CustomerFirstName = "Yasin Mirza",
                            CustomerId = new Guid("af7a41ad-bb23-4237-9177-211cc0541d2c"),
                            CustomerLastName = "Kanberoğlu",
                            HotelId = new Guid("fa6284cf-9614-4b4d-95fe-5e630c7c8e2e"),
                            HotelName = "Hilton Otel",
                            IsReservationCancelled = false,
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            NumberOfGuests = 2,
                            PaymentStatus = 0,
                            ReservationStatus = 0,
                            RoomNumber = 501,
                            RoomType = 6,
                            SpecialRequests = "Internet mutlaka olmalıdır!",
                            TotalPrice = 17500.12m,
                            UpdatedDateTime = new DateTimeOffset(new DateTime(2024, 5, 1, 12, 39, 31, 926, DateTimeKind.Unspecified).AddTicks(1155), new TimeSpan(0, 3, 0, 0, 0))
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
